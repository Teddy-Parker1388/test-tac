---
# HARNESS - Harness Application Setup
# ===================================
# The information in this file is used when we create your Application
# and deployment pipelines in Harness.
#
# .. DANGER::
#   The information in this file is **ONLY** used for the initial set up of your
#   application in Harness.
#
#   Changing any of these values after your application already exists in
#   Harness will **NOT HAVE ANY EFFECT**.

# Organization
# ------------
# The ID of the Organization in Harness that this application belongs to.
#
organization: DevOps

# Deployment Type/Paradigm
# ------------------------
# .. _blue-green: https://docs.harness.io/article/325x7awntc-deployment-concepts-and-strategies#blue_green_deployment
# .. _in-place: https://docs.harness.io/article/325x7awntc-deployment-concepts-and-strategies#rolling_deployment
#
# Valid Values: `blue-green`_ OR `in-place`_ (Rolling)
deployment_type: in-place

# Environments
# ------------
# List of environments that your application needs to support.
# Defaults to dev, qa, stage, perf and prod if not specified.
#
## environments: ## OPTIONAL [1-15 items]
##   - example_environments_value OPTIONAL [~ ^(dev|qa|stage|perf|prod)-?.*$]

# Enable Start Stop Triggers
# --------------------------
# List of non-prod environments that start/stop instance triggers should be
# enabled. Defaults to [] if not specified.
#
## enable_start_stop_triggers: ## OPTIONAL [0-5 items]
##   - example_enable_start_stop_triggers_value OPTIONAL [~ ^(dev|qa|stage|perf)-?.*$]

# Project Version
# ---------------
# The version of the Harness Project terraform code to use when creating the
# Project in the Harness UI.
#
# Defaults to the latest version if not explicitly set.
#
# :::{IMPORTANT}
#   Requires that `tsunami tac sync` be run after the value is updated.
#
#   The project terraform code will also need to be applied to effect the
#   change. See `./terraform/harness/README.md`
# :::
#
project_version: v1.0.0

# Users & Groups
# --------------
# A list of Groups (and Users) that should be created in Harness.
#
# Each Group consists of:
#
# :name: The name of the Group | **Required**
# :type: The type of Group. | **Required**
#
#   Valid values:
#
#   :team: Group will have full access to the Application in Harness
#   :notification: Group will receive deployment notifications from Harness
#
# :members: A list of the email addresses for users who should be part of the Group. | **Required**
#
# Each listed group and user will be created if they do not already exist and
# each listed user will be added to the indicated groups.
#
# It is suggested that you have at least two groups:
#
# A Team group that contains all the members of the AppDev team that should
# have access to the Application in Harness.
#
# A Notifications group. Users in this group will receive deployment notifications
# from Harness.
groups:
  - name: DevOps Team
    type: team
    members:
      - craig.caroon@cengage.com
      - teddy.parker@cengage.com
      - nick.sansone@cengage.com
      - haripriya.maddineni@cengage.com
  - name: DevOps Notifications
    type: notification
    members:
      - ben.stewart@cengage.com
      - craig.caroon@cengage.com
      - teddy.parker@cengage.com
      - nick.sansone@cengage.com
      - haripriya.maddineni@cengage.com

# Artifact
# --------
# Settings required to allow Harness to find the application's artifact.
#
# :server: Alias name to a known/supported Artifact Server | **Required**
#
#   Valid Values:
#
#     - artifactory_cengage_maven
#     - nexus_cengage_maven
#     - nexus_mindtap_maven
#     - nexus_mindtap_npm
#     - no_artifact_required
#
#   If set to ``no_artifact_required``, the rest of the values are unnecessary
#
# :format: Artifact packaging format | **Required**
#
#   Valid Values:  ZIP | TAR | JAR | WAR
#
# :filter: Name, pattern or groupId | **Required**
#
#   The format of the value depends on the Artifact Store and Package Type
#
#   :Artifactory: Path with wildcards -- ``com/cengage/devops/mostly-harmless/**/*.zip``
#   :Cengage | Nexus Maven: GroupId.Name -- ``com.cengage.devops.mostly-harmless``
#   :Nexus NPM: NPM package name -- ``mostly-harmless``
#
# :sources: Source repo name for snapshots and releases | **Required**
#
artifact:
  server: artifactory_cengage_maven
  format: ZIP
  filter: com/cengage/devops/mostly-harmless/**/*.zip
  sources:
    snapshots: cengage-snapshots
    releases: cengage-releases

# Verification
# ------------
# Deployment verification entails running various types of automated tests
# during a deployment. These tests help ensure that the application has been
# properly deployed and is in a working state before switching live traffic to
# the newly deployed instances.
#
# We currently support deployment verification using...
#
# ### jenkins
# At least one Jenkins job is required. You can configure as many as necessary.
# All Jenkins jobs listed here are assumed to be configured on [Jenkins QA
# Automation](https://jenkins-qa-automation.cengage.info)
#
# :::{TIP}
#   **Jenkins Job Parameters**
#
#   Parameter values can make use of these variables defined by Harness:
#
#   * `project.name` - The name of the Harness Project.
#   * `env.name` - The name of the environment being deployed to.
#   * `pipeline.stages.Build_Infra_Main.spec.execution.steps.Infrastructure.steps.Terraform_Apply.output.alb_dns_name_private` - The internal ALB URL to the newly deployed instances.
# :::
#
verification:
  jenkins:
    - name: Functional Tests
      job: mostly-harmless/Functional Tests
      environments:
        - dev
        - qa
        - stage
        - perf
        - prod
      params:
        - name: url
          value: https://<+pipeline.stages.Build_Infra_Main.spec.execution.steps.Infrastructure.steps.Terraform_Apply.output.alb_dns_name_private>:8443
        - name: env
          value: <+env.name>
    - name: Contract Tests
      job: CCaroon/Harness Test Job
      environments:
        - dev
        - qa
        - stage
        - perf
        - prod
      params:
        - name: name
          value: Contract Tests
        - name: url
          value: https://<+pipeline.stages.Build_Infra_Main.spec.execution.steps.Infrastructure.steps.Terraform_Apply.output.alb_dns_name_private>:8443
        - name: env
          value: <+env.name>
        - name: force_fail
          value: false
    - name: Load Tests
      job: mostly-harmless/Load Tests
      environments:
        - stage
        - perf
      params:
        - name: url
          value: https://<+pipeline.stages.Build_Infra_Main.spec.execution.steps.Infrastructure.steps.Terraform_Apply.output.alb_dns_name_private>:8443
        - name: env
          value: <+env.name>
        - name: duration
          value: 60

# Change Management
# -----------------
# When deploying to the Production environment, Harness will automatically create
# an RFC for the deployment. The Production deployment will pause at that point
# and wait for the RFC to be approved before continuing.
#
# These settings are needed by the RFC process to help identify the application
# in SNOW.
#
# :item: RFC Item Name | **Required**
#
#   A Change Management team member can provide this value for the application.
#
#   .. TIP::
#     The ``item`` for an application can be requested in the
#     ``#onboarding-harness-snow-apps`` Slack channel.
#
# :sub_category: RFC Sub-category value | **Required**
#
#   Valid values: Internal Application | External Application
#
change_management:
  item: CD-DevOps
  sub_category: Internal Application
